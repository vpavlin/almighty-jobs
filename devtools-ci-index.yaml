- defaults:
    name: global
    timeout: '15m'
    jobdescription: "Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs"
    git_organization: fabric8-services
    github_user: almighty-bot
    github_hooks: true
    branch: master

- admin_list_defaults: &admin_list_defaults
    name: 'admin_list_defaults'
    admin-list:
        - kbsingh
        - aslakknutsen
        - kwk
        - sbose78
        - tsmaeder
        - maxandersen
        - bartoszmajsak
        - pmuir
        - pranavgore09
        - baijum
        - DhritiShikhar
        - joshuawilson
        - Ritsyy
        - sanbornsen
        - nimishamukherjee
        - SMahil
        - xcoulon
        - alexeykazakov
        - michaelkleinhenz
        - ppitonak
        - ldimaggi
        - VineetReynolds
        - hectorj2f
        - ibuziuk
        - debloper
        - vikram-raj
        - dlabrecq
        - dgutride
        - mindreeper2420
        - invincibleJai
        - arunkumars08
        - fabric8cd
        - mharpur
        - corinnekrych
        - jstrachan
        - Katka92
        - rhopp
        - vpavlin
        - sbryzak
        - msrb
        - inoxx03
        - lavernw1
        - rhoads-zach
        - tradej
        - fridex

- github_pull_request_defaults: &github_pull_request_defaults
    name: 'github_pull_request_defaults'
    <<: *admin_list_defaults
    github-hooks: '{github_hooks}'
    permit-all: false
    trigger-phrase: '.*\[test\].*'
    allow-whitelist-orgs-as-admins: true
    status-context: "ci.centos.org PR build"

- trigger:
    name: githubprb
    triggers:
      - github-pull-request:
          <<: *github_pull_request_defaults

- scm:
    name: git-scm
    scm:
        - git:
            credentials-id: "c4872223-4024-4cd4-8e09-1bbdc7d6e971"
            url: "{git_url}"
            skip-tag: True
            git-tool: ci-git
            refspec: '+refs/pull/*:refs/remotes/origin/pr/*'
            branches:
                - '${{ghprbActualCommit}}'

- wrapper:
    name: npm-build-deliver-creds
    wrappers:
        - credentials-binding:
            - text:
                credential-id: a9450b57-2492-4c47-9bd1-cabf87f74bb1
                variable: GH_TOKEN
            - text:
                credential-id: f8f7db1d-87c8-4f64-bae7-584142e44f8e
                variable: NPM_TOKEN

- wrapper:
    name: che_credentials_wrapper
    wrappers:
        - credentials-binding:
            - username-password-separated:
                credential-id: b2ae0d9a-307a-4df3-b027-9aa0c22e29dd
                username: RHCHEBOT_DOCKER_HUB_USERNAME
                password: RHCHEBOT_DOCKER_HUB_PASSWORD
            - file:
                credential-id: 93da78ec-7785-49ab-a1ef-586424b3e94f
                variable: creds_config_file

- job_template_defaults: &job_template_defaults
    name: 'job_template_defaults'
    description: |
      {jobdescription}
    node: "{ci_project}"
    concurrent: true
    properties:
        - github:
            url: https://github.com/{git_organization}/{git_repo}/
    scm:
        - git-scm:
            git_url: https://{github_user}@github.com/{git_organization}/{git_repo}.git
    triggers:
        - githubprb:
            github_hooks: '{github_hooks}'
    builders:
        - shell: |
            # testing out the cico client
            set +e
            export CICO_API_KEY=$(cat ~/duffy.key )
            # get node
            n=1
            while true
            do
                cico_output=$(cico node get -f value -c ip_address -c comment)
                if [ $? -eq 0 ]; then
                    read CICO_hostname CICO_ssid <<< $cico_output
                    if  [ ! -z "$CICO_hostname" ]; then
                        # we got hostname from cico
                        break
                    fi
                    echo "'cico node get' succeed, but can't get hostname from output"
                fi
                if [ $n -gt 5 ]; then
                    # give up after 5 tries
                    echo "giving up on 'cico node get'"
                    exit 1
                fi
                echo "'cico node get' failed, trying again in 60s ($n/5)"
                n=$[$n+1]
                sleep 60
            done
            sshopts="-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root"
            ssh_cmd="ssh $sshopts $CICO_hostname"
            env > jenkins-env
            $ssh_cmd yum -y install rsync
            if [ -n "${{ghprbTargetBranch}}" ]; then
                git rebase --preserve-merges origin/${{ghprbTargetBranch}}
            else
                echo "Not a PR build, using master"
            fi
            rsync -e "ssh $sshopts" -Ha $(pwd)/ $CICO_hostname:payload \
            && /usr/bin/timeout {timeout} $ssh_cmd -t "cd payload && {ci_cmd}"
            rtn_code=$?
            if [ $rtn_code -eq 0 ]; then
                cico node done $CICO_ssid
            else
                if [[ $rtn_code -eq 124 ]]; then
                   echo "BUILD TIMEOUT";
                   cico node done $CICO_ssid
                else
                    # fail mode gives us 12 hrs to debug the machine
                    curl "http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&ssid=$CICO_ssid"
                fi
            fi
            exit $rtn_code

- job-template:
    name: '{ci_project}-{git_repo}'
    <<: *job_template_defaults

- job-template:
    name: '{ci_project}-{git_repo}-jjb-test'
    builders:
    - shell: |
        git rebase --preserve-merges origin/${{ghprbTargetBranch}}
        {ci_cmd}
        exit $?
    <<: *job_template_defaults

- job-template:
    name: '{ci_project}-{git_repo}-coverage'
    triggers:
      - github-pull-request:
          status-context: "ci.centos.org PR build (coverage)"
          <<: *github_pull_request_defaults
    <<: *job_template_defaults

- job-template:
    name: '{ci_project}-{git_repo}-wit-go-benchmarks'
    triggers:
      - timed: '59 23 * * 6'
    <<: *job_template_defaults

- job-template:
    name: '{ci_project}-{git_repo}-fabric8-analytics'
    triggers:
      - github-pull-request:
          status-context: "ci.centos.org PR build (fabric8-analytics)"
          org-list:
            - fabric8-analytics
          <<: *github_pull_request_defaults
    <<: *job_template_defaults

- job-template:
    name: '{ci_project}-{git_repo}-fabric8-analytics-pylint'
    git_organization: fabric8-analytics
    ci_project: 'devtools'
    ci_cmd: '/bin/bash run-linter.sh'
    timeout: '20m'
    triggers:
      - github-pull-request:
          status-context: "ci.centos.org pylint run (fabric8-analytics)"
          org-list:
            - fabric8-analytics
          <<: *github_pull_request_defaults
    <<: *job_template_defaults

- job-template: &job_template_build_defaults
    name: 'job_template_build_defaults'
    description: |
      {jobdescription}
    node: "{ci_project}"
    properties:
        - github:
            url: https://github.com/{git_organization}/{git_repo}/
    scm:
        - git:
            url: https://github.com/{git_organization}/{git_repo}.git
            shallow_clone: true
            branches:
                - '{branch}'
    triggers:
        - github
    svc_name: none
    prj_name: dsaas-preview
    saas_git: none
    saasherder_prepare: |
        if [ "$SAAS_GIT" != "none" ]; then
            SAAS_ENV=staging
            PATH=$PATH:~/.local/bin/
            CONTEXT=$(echo $SAAS_GIT | sed 's/.*://')
            SAAS_GIT=$(echo $SAAS_GIT | sed 's/:.*//')
            git clone --depth 1 https://github.com/openshiftio/$SAAS_GIT saas.git
            cd saas.git
            [ "$CONTEXT" != "$SAAS_GIT" ] && saasherder --context $CONTEXT config get-contexts > /dev/null
            export DEVSHIFT_TAG_LEN=$(saasherder --environment $SAAS_ENV get hash_length $GIT_REPO)
            cd ..
        fi
    saasherder_deploy: |
        if [ "$SVC_NAME" != "none" ]; then
            oc deploy $SVC_NAME --latest -n $PRJ_NAME
            rtn_code=$?
        fi
        if [ "$SAAS_GIT" != "none" ]; then
            cd saas.git
            saasherder --environment $SAAS_ENV update hash $GIT_REPO $GIT_COMMIT
            saasherder --environment $SAAS_ENV pull $GIT_REPO
            saasherder --environment $SAAS_ENV template --output-dir $GIT_REPO-processed tag $GIT_REPO
            oc apply -f $GIT_REPO-processed/$GIT_REPO.yaml -n $PRJ_NAME
            rtn_code=$?
            cd ..
        fi
    builders:
        - shell: |
            # testing out the cico client
            set +e

            export CICO_API_KEY=$(cat ~/duffy.key )
            # get node
            n=1
            while true
            do
                cico_output=$(cico node get -f value -c ip_address -c comment)
                if [ $? -eq 0 ]; then
                    read CICO_hostname CICO_ssid <<< $cico_output
                    if  [ ! -z "$CICO_hostname" ]; then
                        # we got hostname from cico
                        break
                    fi
                    echo "'cico node get' succeed, but can't get hostname from output"
                fi
                if [ $n -gt 5 ]; then
                    # give up after 5 tries
                    echo "giving up on 'cico node get'"
                    exit 1
                fi
                echo "'cico node get' failed, trying again in 60s ($n/5)"
                n=$[$n+1]
                sleep 60
            done
            sshopts="-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root"
            ssh_cmd="ssh $sshopts $CICO_hostname"

            # Verify Job configuration
            if [ "{svc_name}" == "none" -a "{saas_git}" == "none" ]; then
                echo "Not part of SAAS"
            else
                #Prepare values for deployment
                SVC_NAME={svc_name}
                GIT_REPO={git_repo}
                PRJ_NAME={prj_name}
                SAAS_GIT={saas_git}
                {saasherder_prepare}
            fi

            if [ -z "$DEVSHIFT_TAG_LEN" ]; then
                export DEVSHIFT_TAG_LEN=7
            fi

            env > jenkins-env
            $ssh_cmd yum -y install rsync
            rsync -e "ssh $sshopts" -Ha $(pwd)/ $CICO_hostname:payload
            $ssh_cmd -t "cd payload && {ci_cmd}"
            rtn_code=$?
            if [ $rtn_code -eq 0 ]; then
              cico node done $CICO_ssid
              #Deploy preview
              # Verify Job configuration
              if [ "{svc_name}" == "none" -a "{saas_git}" == "none" ]; then
                echo "Not part of SAAS, skipping deployment"
              else
                {saasherder_deploy}
              fi
            else
              # fail mode gives us 12 hrs to debug the machine
              curl "http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&ssid=$CICO_ssid"
            fi
            exit $rtn_code

- job-template: &job_template_publish_branch_defaults
    name: 'job_template_publish_branch_defaults'
    description: |
      {jobdescription}
    node: "{ci_project}"
    properties:
        - github:
            url: https://github.com/{git_organization}/{git_repo}/
    scm:
        - git:
            url: https://github.com/{git_organization}/{git_repo}.git
            shallow_clone: true
            branches:
                - '{branch}'
    triggers:
        - githubprb:
            github_hooks: '{github_hooks}'
    svc_name: none
    builders:
        - shell: |
            # testing out the cico client
            set +e
            export CICO_API_KEY=$(cat ~/duffy.key )
            # get node
            n=1
            while true
            do
                cico_output=$(cico node get -f value -c ip_address -c comment)
                if [ $? -eq 0 ]; then
                    read CICO_hostname CICO_ssid <<< $cico_output
                    if  [ ! -z "$CICO_hostname" ]; then
                        # we got hostname from cico
                        break
                    fi
                    echo "'cico node get' succeed, but can't get hostname from output"
                fi
                if [ $n -gt 5 ]; then
                    # give up after 5 tries
                    echo "giving up on 'cico node get'"
                    exit 1
                fi
                echo "'cico node get' failed, trying again in 60s ($n/5)"
                n=$[$n+1]
                sleep 60
            done
            sshopts="-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root"
            ssh_cmd="ssh $sshopts $CICO_hostname"
            env > jenkins-env
            $ssh_cmd yum -y install rsync
            rsync -e "ssh $sshopts" -Ha $(pwd)/ $CICO_hostname:payload
            $ssh_cmd -t "cd payload && {ci_cmd}"
            rtn_code=$?
            if [ $rtn_code -eq 0 ]; then
              cico node done $CICO_ssid
              if [ "{svc_name}" != "none" ]; then
                oc deploy {svc_name} --latest
              fi
            else
              # fail mode gives us 12 hrs to debug the machine
              curl "http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&ssid=$CICO_ssid"
            fi
            exit $rtn_code

- wrapper:
    name: registry_devshift_credentials
    wrappers:
        - credentials-binding:
            - username-password-separated:
                credential-id: 1e87842e-7bb7-42f3-aad0-9431acb55c01
                username: DEVSHIFT_USERNAME
                password: DEVSHIFT_PASSWORD

- wrapper:
    name: recommender_api_token
    wrappers:
        - credentials-binding:
            - text:
                credential-id: 2fc94f6b-dfef-49a4-a217-fe47aaeea056
                variable: RECOMMENDER_API_TOKEN

- job-template:
    name: '{ci_project}-{git_repo}-build-master'
    wrappers:
        - registry_devshift_credentials
    scm:
        - git:
            url: https://github.com/{git_organization}/{git_repo}.git
            shallow_clone: true
            branches:
                - master
    <<: *job_template_build_defaults

- job-template:
    name: '{ci_project}-{git_repo}-f8a-build-master'
    wrappers:
        - registry_devshift_credentials
    scm:
        - git:
            url: https://github.com/{git_organization}/{git_repo}.git
            shallow_clone: true
            branches:
                - master
    skip_deploy: 0
    deployment_units: ''
    deployment_configs: ''
    builders:
        - shell: |
            # testing out the cico client
            set +e
            set +x
            export CICO_API_KEY=$(cat ~/duffy.key )
            # get node
            n=1
            while true
            do
                cico_output=$(cico node get -f value -c ip_address -c comment)
                if [ $? -eq 0 ]; then
                    read CICO_hostname CICO_ssid <<< $cico_output
                    if  [ ! -z "$CICO_hostname" ]; then
                        # we got hostname from cico
                        break
                    fi
                    echo "'cico node get' succeed, but can't get hostname from output"
                fi
                if [ $n -gt 5 ]; then
                    # give up after 5 tries
                    echo "giving up on 'cico node get'"
                    exit 1
                fi
                echo "'cico node get' failed, trying again in 60s ($n/5)"
                n=$[$n+1]
                sleep 60
            done
            echo 'Using Host' $CICO_hostname
            set -x

            env > jenkins-env
            cat $creds_config_file >> jenkins-env

            sshopts="-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root"
            ssh_cmd="ssh $sshopts $CICO_hostname"
            $ssh_cmd yum -y install rsync
            rsync -e "ssh $sshopts" -Ha $(pwd)/ $CICO_hostname:payload
            $ssh_cmd -t "cd payload && {ci_cmd}"
            rtn_code=$?
            # We want to reuse the node for running E2E tests,
            # but only if we are not doomed already.
            if [[ $rtn_code -ne 0 || {skip_deploy} -ne 0 ]]; then
                cico node done $CICO_ssid
            fi

            cat > deploy-e2e-test-params << EOF
            GIT_ORGANIZATION={git_organization}
            UPSTREAM_GIT_COMMIT=$GIT_COMMIT
            SAAS_GIT={saas_git}
            DEPLOYMENT_UNITS={deployment_units}
            DEPLOYMENT_CONFIGS={deployment_configs}
            CICO_HOSTNAME=$CICO_hostname
            CICO_SSID=$CICO_ssid
            EOF

            exit $rtn_code
        - conditional-step:
            condition-kind: shell
            condition-command: |
                [[ {skip_deploy} -eq 0 ]] && exit 0 || exit 1
            steps:
                - trigger-builds:
                    - project:
                        - "devtools-f8a-master-deploy-e2e-test"
                      property-file: deploy-e2e-test-params
                      block: true
    <<: *job_template_build_defaults

- job-template:
    name: '{ci_project}-f8a-master-deploy-e2e-test'
    wrappers:
        - recommender_api_token
    concurrent: false
    parameters:
      - string:
          name: GIT_ORGANIZATION
          default: fabric8-analytics
      - string:
          name: UPSTREAM_GIT_COMMIT
      - string:
          name: SAAS_GIT
          default: '{saas_git}'
      - string:
          name: PRJ_NAME
          default: '{prj_name}'
      - string:
          name: SVC_NAME
          default: none
      - string:
          name: DEPLOYMENT_UNITS
      - string:
          name: DEPLOYMENT_CONFIGS
      - string:
          name: CICO_HOSTNAME
      - string:
          name: CICO_SSID
    scm:
        - git:
            url: https://github.com/{git_organization}/{git_repo}.git
            shallow_clone: true
            branches:
                - master
    builders:
        - shell: |
            # Verify Job configuration
            if [ "$SVC_NAME" == "none" -a "$SAAS_GIT" == "none" ]; then
                echo "require either svc_name or saas_git to be set"
                exit 1
            fi

            env > integration-tests/jenkins-env

            export GIT_COMMIT=$UPSTREAM_GIT_COMMIT


            {saasherder_prepare}
            export DEVSHIFT_TAG_LEN=7
            for DEPLOYMENT_UNIT in $DEPLOYMENT_UNITS; do
                export GIT_REPO=$DEPLOYMENT_UNIT
                # Deploy preview
                {saasherder_deploy}
            done

            export CICO_API_KEY=$(cat ~/duffy.key )
            gc() {{
                rtn_code=$?
                for DEPLOYMENT_CONFIG in $DEPLOYMENT_CONFIGS; do
                    if [ $rtn_code -ne 0 ]; then
                        # Tests failed, rollback
                        oc rollback dc/$DEPLOYMENT_CONFIG -n $PRJ_NAME || :
                    fi
                done
                cico node done $CICO_SSID || :
                exit $rtn_code
            }}
            trap gc EXIT SIGINT
            set -e

            # Wait for deployment to start and then wait for it to be ready (yeah, this is pretty fragile)
            sleep 5
            LAST_DC=${{DEPLOYMENT_CONFIGS##* }}
            oc logs -f dc/$LAST_DC -n $PRJ_NAME

            # Run E2E tests
            sshopts="-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root"
            ssh_cmd="ssh $sshopts $CICO_HOSTNAME"
            rsync -e "ssh $sshopts" -Ha $(pwd)/ $CICO_HOSTNAME:payload-tests
            $ssh_cmd -t "cd payload-tests/integration-tests && /bin/bash cico_run_tests.sh"

    <<: *job_template_build_defaults

- job-template:
    name: '{ci_project}-{git_repo}-build-che-credentials-master'
    wrappers:
        - che_credentials_wrapper
        - registry_devshift_credentials
    scm:
        - git:
            url: https://github.com/{git_organization}/{git_repo}.git
            shallow_clone: true
            branches:
                - master
    builders:
        - shell: |
            # testing out the cico client
            set +e
            set +x
            export CICO_API_KEY=$(cat ~/duffy.key )
            # get node
            n=1
            while true
            do
                cico_output=$(cico node get -f value -c ip_address -c comment)
                if [ $? -eq 0 ]; then
                    read CICO_hostname CICO_ssid <<< $cico_output
                    if  [ ! -z "$CICO_hostname" ]; then
                        # we got hostname from cico
                        break
                    fi
                    echo "'cico node get' succeed, but can't get hostname from output"
                fi
                if [ $n -gt 5 ]; then
                    # give up after 5 tries
                    echo "giving up on 'cico node get'"
                    exit 1
                fi
                echo "'cico node get' failed, trying again in 60s ($n/5)"
                n=$[$n+1]
                sleep 60
            done
            echo 'Using Host' $CICO_hostname
            set -x

            #Prepare values for deployment
            SVC_NAME={svc_name}
            GIT_REPO={git_repo}
            PRJ_NAME={prj_name}
            SAAS_GIT={saas_git}
            {saasherder_prepare}

            if [ -z "$DEVSHIFT_TAG_LEN" ]; then
                export DEVSHIFT_TAG_LEN=7
            fi
            env > jenkins-env
            cat $creds_config_file >> jenkins-env

            sshopts="-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root"
            ssh_cmd="ssh $sshopts $CICO_hostname"
            $ssh_cmd yum -y install rsync
            rsync -e "ssh $sshopts" -Ha $(pwd)/ $CICO_hostname:payload
            $ssh_cmd -t "cd payload && {ci_cmd}"
            rtn_code=$?
            if [ $rtn_code -eq 0 ]; then
                #Deploy preview
                {saasherder_deploy}
            fi
            cico node done $CICO_ssid
            exit $rtn_code
    <<: *job_template_build_defaults

- job-template:
    name: '{ci_project}-{git_repo}-publish-branch'
    scm:
        - git:
            url: https://github.com/{git_organization}/{git_repo}.git
            shallow_clone: true
            branches:
                - '{branch}'
    triggers:
      - github-pull-request:
          white-list-target-branches:
             - '{branch}'
          <<: *github_pull_request_defaults
    <<: *job_template_publish_branch_defaults

- job-template:
    name: '{ci_project}-{git_repo}-build-master-coverage'
    scm:
        - git:
            url: https://github.com/{git_organization}/{git_repo}.git
            shallow_clone: true
            branches:
                - master
    <<: *job_template_build_defaults

- job-template:
    name: '{ci_project}-{git_repo}-npm-publish-build-master'
    description: |
      {jobdescription}
      If all goes well, npm is published
    node: "{ci_project}"
    wrappers:
            - npm-build-deliver-creds
            - registry_devshift_credentials
    properties:
        - github:
            url: https://github.com/{git_organization}/{git_repo}/
        - inject:
            properties-content: |
               JENKINS_URL=https://ci.centos.org
    scm:
        - git:
            url: https://{github_user}@github.com/{git_organization}/{git_repo}.git
            credentials-id: "c4872223-4024-4cd4-8e09-1bbdc7d6e971"
            git-tool: ci-git
            shallow_clone: false
            skip-tag: True
            branches:
                - master

    triggers:
        - github
    <<: *job_template_build_defaults

- job-template:
    name: '{ci_project}-fabric8-devdoc-build-master'
    description: |
      {jobdescription}
      If all goes well, gh-pages is pushed
    node: "{ci_project}"
    properties:
        - github:
            url: https://github.com/{git_organization}/{git_repo}/
    scm:
        - git:
            url: https://{github_user}@github.com/{git_organization}/{git_repo}.git
            credentials-id: "c4872223-4024-4cd4-8e09-1bbdc7d6e971"
            git-tool: ci-git
            shallow_clone: false
            branches:
                - master

    triggers:
        - github
    builders:
        - shell: |
            # testing out the cico client
            set +e
            export CICO_API_KEY=$(cat ~/duffy.key )
            # get node
            n=1
            while true
            do
                cico_output=$(cico node get -f value -c ip_address -c comment)
                if [ $? -eq 0 ]; then
                    read CICO_hostname CICO_ssid <<< $cico_output
                    if  [ ! -z "$CICO_hostname" ]; then
                        # we got hostname from cico
                        break
                    fi
                    echo "'cico node get' succeed, but can't get hostname from output"
                fi
                if [ $n -gt 5 ]; then
                    # give up after 5 tries
                    echo "giving up on 'cico node get'"
                    exit 1
                fi
                echo "'cico node get' failed, trying again in 60s ($n/5)"
                n=$[$n+1]
                sleep 60
            done
            sshopts="-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root"
            ssh_cmd="ssh $sshopts $CICO_hostname"
            env > jenkins-env
            $ssh_cmd yum -y install rsync
            rsync -e "ssh $sshopts" -Ha $(pwd)/ $CICO_hostname:payload
            /usr/bin/timeout {timeout} $ssh_cmd -t "cd payload && {ci_cmd}"
            rtn_code=$?
            if [[ $rtn_code -eq 124 ]]; then
               echo "BUILD TIMEOUT";
            else
               rsync -delete -PHva -e "ssh $sshopts" $CICO_hostname:payload/ $(pwd)
               rtn_code=$?
            fi
            cico node done $CICO_ssid
            exit $rtn_code
    publishers:
      - git:
          push-only-if-success: true
          push-merge: true
          force-push: true
          branches:
            - branch:
                remote: origin
                name: "gh-pages"


- job:
    name: 'devtools-eclipse-che-build-dockerfiles'
    wrappers:
        - che_credentials_wrapper
        - registry_devshift_credentials
    defaults: global
    node: devtools
    properties:
        - github:
            url: https://github.com/redhat-developer/che-dockerfiles/
    scm:
        - git:
            url: https://github.com/redhat-developer/che-dockerfiles.git
            shallow_clone: true
            branches:
                - master
    triggers:
        - github
        - timed: '59 22 * * *'
    builders:
        - shell: |
            # testing out the cico client
            set +e
            set +x
            env > jenkins-env
            cat $creds_config_file >> jenkins-env
            export CICO_API_KEY=$(cat ~/duffy.key )
            # get node
            n=1
            while true
            do
                cico_output=$(cico node get -f value -c ip_address -c comment)
                if [ $? -eq 0 ]; then
                    read CICO_hostname CICO_ssid <<< $cico_output
                    if  [ ! -z "$CICO_hostname" ]; then
                        # we got hostname from cico
                        break
                    fi
                    echo "'cico node get' succeed, but can't get hostname from output"
                fi
                if [ $n -gt 5 ]; then
                    # give up after 5 tries
                    echo "giving up on 'cico node get'"
                    exit 1
                fi
                echo "'cico node get' failed, trying again in 60s ($n/5)"
                n=$[$n+1]
                sleep 60
            done
            echo 'Using Host' $CICO_hostname
            set -x
            sshopts="-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root"
            ssh_cmd="ssh $sshopts $CICO_hostname"
            $ssh_cmd yum -y install rsync
            rsync -e "ssh $sshopts" -Ha $(pwd)/ $CICO_hostname:payload
            /usr/bin/timeout 90m $ssh_cmd -t "cd payload && /bin/bash cico_build_publish_images.sh"
            rtn_code=$?
            if [[ $rtn_code -eq 124 ]]; then
               echo "BUILD TIMEOUT";
            fi
            cico node done $CICO_ssid
            exit $rtn_code

- job:
    name: 'devtools-eclipse-che-promotion'

    parameters:
        - string:
            name: CHE_SERVER_STAGE_DOCKER_IMAGE
            description: "Full docker location with organization/repo:tag"

    wrappers:
        - che_credentials_wrapper
    defaults: global
    node: devtools
    builders:
        - shell: |
            # promoting to rhche
            set +e
            set +x

            # downloads staging image
            docker pull ${CHE_SERVER_STAGE_DOCKER_IMAGE}

            # rename to production organization
            CHE_SERVER_PROD_DOCKER_IMAGE="${CHE_SERVER_STAGE_DOCKER_IMAGE/rhchestage/rhche}"

            docker login -u ${RHCHEBOT_DOCKER_HUB_USERNAME} -p ${RHCHEBOT_DOCKER_HUB_PASSWORD} -e noreply@redhat.co

            # push to Docker hub
            docker tag ${CHE_SERVER_STAGE_DOCKER_IMAGE} ${CHE_SERVER_PROD_DOCKER_IMAGE}
            docker push ${CHE_SERVER_PROD_DOCKER_IMAGE}

- job:
    name: 'devtools-build-run-che-build-master'
    wrappers:
        - che_credentials_wrapper
        - registry_devshift_credentials
        - credentials-binding:
            - text:
                credential-id: de793dce-5821-4182-af4f-6c7b42b5c21d
                variable: KEYCLOAK_TOKEN
            - username-password-separated:
                credential-id: ac51aeb0-a436-4a50-a71d-aa6f99075398
                username: OSIO_USERNAME
                password: OSIO_PASSWORD
    defaults: global
    node: devtools
    properties:
        - github:
            url: https://github.com/redhat-developer/rh-che/
    scm:
        - git:
            url: https://github.com/redhat-developer/rh-che.git
            shallow_clone: true
            branches:
                - master
    publishers:
        - junit:
            results: '**/target/surefire-reports/*.xml'
            allow-empty-results: true

    triggers:
        - github
    builders:
        - shell: |
            # testing out the cico client
            set +e
            set +x
            env > jenkins-env
            cat $creds_config_file >> jenkins-env
            export CICO_API_KEY=$(cat ~/duffy.key )
            # get node
            n=1
            while true
            do
                cico_output=$(cico node get -f value -c ip_address -c comment)
                if [ $? -eq 0 ]; then
                    read CICO_hostname CICO_ssid <<< $cico_output
                    if  [ ! -z "$CICO_hostname" ]; then
                        # we got hostname from cico
                        break
                    fi
                    echo "'cico node get' succeed, but can't get hostname from output"
                fi
                if [ $n -gt 5 ]; then
                    # give up after 5 tries
                    echo "giving up on 'cico node get'"
                    exit 1
                fi
                echo "'cico node get' failed, trying again in 60s ($n/5)"
                n=$[$n+1]
                sleep 60
            done
            echo 'Using Host' $CICO_hostname
            set -x
            sshopts="-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root"
            ssh_cmd="ssh $sshopts $CICO_hostname"
            $ssh_cmd yum -y install rsync
            rsync -e "ssh $sshopts" -Ha $(pwd)/ $CICO_hostname:payload
            $ssh_cmd -t "cd payload && /bin/bash cico_build.sh && /bin/bash cico_deploy.sh"
            rtn_code=$?
            rsync -e "ssh $sshopts" -Ha --include='surefire-reports/***' --include='*/' --exclude='*' $CICO_hostname:payload/ $(pwd)
            cico node done $CICO_ssid
            exit $rtn_code

- che-functional-tests-template: &che-functional-tests-template
    name: 'che-functional-tests-template'
    wrappers:
        - credentials-binding:
            - text:
                credential-id: de793dce-5821-4182-af4f-6c7b42b5c21d
                variable: KEYCLOAK_TOKEN
            - username-password-separated:
                credential-id: ac51aeb0-a436-4a50-a71d-aa6f99075398
                username: OSIO_USERNAME
                password: OSIO_PASSWORD
    publishers:
      - archive:
           artifacts: './target/screenshots/*.*,./target/surefire-reports/**'
           allow-empty: true
           fingerprint: true
    <<: *job_template_defaults

- job-template:
    name: '{ci_project}-{git_repo}-periodical'
    triggers:
        - timed: 'H H(5-15)/2 * * *'
    scm:
        - git:
            url: https://{github_user}@github.com/{git_organization}/{git_repo}.git
            branches:
                - origin/master
    <<: *che-functional-tests-template

- job-template:
    name: '{ci_project}-{git_repo}-prcheck'
    triggers:
        - github
        - githubprb:
            github_hooks: '{github_hooks}'
    <<: *che-functional-tests-template

- job:
    name: 'devtools-test-performance-core-db'
    defaults: global
    node: devtools
    properties:
        - github:
            url: https://github.com/aslakknutsen/almighty-performance
    scm:
        - git:
            url: https://github.com/aslakknutsen/almighty-performance.git
            shallow_clone: true
            branches:
                - master
    triggers:
        - timed: '15 00 * * *'
    builders:
        - shell: |
            set +e
            set +x
            oc set env dc almighty-performance RATE=120 DURATION=30s
            sleep 10
            oc scale --replicas=1 dc almighty-performance
            sleep 10
            oc scale --replicas=0 dc almighty-performance
            oc logs dc/almighty-performance --follow

- job:
    name: 'devtools-test-perfcake-performance-core-db'
    disabled: true
    defaults: global
    node: devtools
    properties:
        - github:
            url: https://github.com/ldimaggi/perfcake
    scm:
        - git:
            url: https://github.com/ldimaggi/perfcake.git
            shallow_clone: true
            branches:
                - master
    triggers:
        - timed: '1 22 * * *'
    builders:
        - shell: |
            set +e
            set +x
            env > jenkins-env
            cat $creds_config_file >> jenkins-env
            export CICO_API_KEY=$(cat ~/duffy.key )
            # get node
            n=1
            while true
            do
                cico_output=$(cico node get -f value -c ip_address -c comment)
                if [ $? -eq 0 ]; then
                    read CICO_hostname CICO_ssid <<< $cico_output
                    if  [ ! -z "$CICO_hostname" ]; then
                        # we got hostname from cico
                        break
                    fi
                    echo "'cico node get' succeed, but can't get hostname from output"
                fi
                if [ $n -gt 5 ]; then
                    # give up after 5 tries
                    echo "giving up on 'cico node get'"
                    exit 1
                fi
                echo "'cico node get' failed, trying again in 60s ($n/5)"
                n=$[$n+1]
                sleep 60
            done
            echo 'Using Host' $CICO_hostname
            set -x
            sshopts="-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root"
            ssh_cmd="ssh $sshopts $CICO_hostname"
            $ssh_cmd yum -y install rsync
            rsync -e "ssh $sshopts" -Ha $(pwd)/ $CICO_hostname:payload
            $ssh_cmd -t "cd payload && /bin/bash ./POC_perf_test.sh"
            rtn_code=$?
            cico node done $CICO_ssid
            exit $rtn_code
    publishers:
        - archive:
            artifacts: ./devtools-performance-results

- job-template:
    name: 'devtools-test-end-to-end-{test_url}-{test_suite}'
    defaults: global
    node: devtools
    after: fabric8io-fabric8-test-build-master
    properties:
        - github:
            url: https://github.com/fabric8io/fabric8-test
    scm:
        - git:
            url: https://github.com/fabric8io/fabric8-test.git

            shallow_clone: true
            branches:
                - master
    triggers:
        - timed: '{ee_test_start_time}'
        - reverse:
            jobs: '{after}'
            result: 'success'
        - reverse:
            jobs: '{after}'
            result: 'failure'
    wrappers:
        - credentials-binding:
            - username-password-separated:
                credential-id: 9d2a233c-4350-49ab-983d-5b8d0de95f44
                username: EE_TEST_USERNAME
                password: EE_TEST_PASSWORD
            - text:
                credential-id: "{oso_token_creds}"
                variable: EE_TEST_OSO_TOKEN
    builders:
        - shell: |
            set +e
            set +x
            env > jenkins-env
            cat $creds_config_file >> jenkins-env
            cp ~/artifacts.key .
            export CICO_API_KEY=$(cat ~/duffy.key )
            # get node
            n=1
            while true
            do
                cico_output=$(cico node get -f value -c ip_address -c comment)
                if [ $? -eq 0 ]; then
                    read CICO_hostname CICO_ssid <<< $cico_output
                    if  [ ! -z "$CICO_hostname" ]; then
                        # we got hostname from cico
                        break
                    fi
                    echo "'cico node get' succeed, but can't get hostname from output"
                fi
                if [ $n -gt 5 ]; then
                    # give up after 5 tries
                    echo "giving up on 'cico node get'"
                    exit 1
                fi
                echo "'cico node get' failed, trying again in 60s ($n/5)"
                n=$[$n+1]
                sleep 60
            done
            echo 'Using Host' $CICO_hostname
            set -x
            sshopts="-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root"
            ssh_cmd="ssh $sshopts $CICO_hostname"
            $ssh_cmd yum -y install rsync
            rsync -e "ssh $sshopts" -Ha $(pwd)/ $CICO_hostname:payload
            /usr/bin/timeout {timeout} $ssh_cmd -t "cd payload/ee_tests && /bin/bash cico_run_EE_tests.sh https://{test_url} ${{BUILD_NUMBER}} {test_suite}"
            rtn_code=$?
            if [[ $rtn_code -eq 124 ]]; then
               echo "BUILD TIMEOUT";
            else
               rsync -delete -PHva -e "ssh $sshopts" $CICO_hostname:payload/ $(pwd) || rtn_code=$?
            fi
            cico node done $CICO_ssid
            exit $rtn_code
    publishers:
      - archive:
           artifacts: './target/screenshots/*.*'
           allow-empty: true
           fingerprint: true

- wrapper:
    name: generator_credentials_wrapper
    wrappers:
        - credentials-binding:
            - text:
                credential-id: 061479ee-de4a-4fb0-b752-7b86659ba3ca
                variable: GENERATOR_DOCKER_HUB_PASSWORD

- job-template:
    name: '{ci_project}-{git_repo}-generator-build-master'
    scm:
        - git:
            url: https://github.com/{git_organization}/{git_repo}.git
            shallow_clone: true
            branches:
                - master
    wrappers:
        - generator_credentials_wrapper
        - registry_devshift_credentials
    <<: *job_template_build_defaults

- job-template:
    name: '{ci_project}-{git_repo}-promote-to-prod'
    defaults: global
    node: devtools
    properties:
        - github:
            url: https://github.com/openshiftio/{git_repo}/
    scm:
        - git:
            url: https://github.com/openshiftio/{git_repo}.git
            shallow_clone: true
            branches:
                - master
    triggers:
        - github
    builders:
        - shell: |
            set -ex
            ENVIRONMENT=production APPSEC=true PATH=$PATH:~/.local/bin /bin/bash ~/saasherder/fetch_and_apply.sh

- job-template:
    name: '{ci_project}-{git_repo}-promote-to-prod-test'
    builders:
        - shell: |
            set -ex
            ENVIRONMENT=production PATH=$PATH:~/.local/bin DRY_RUN=true /bin/bash ~/saasherder/fetch_and_apply.sh
            CONTEXTS=$(PATH=$PATH:~/.local/bin saasherder config get-contexts)
            for c in `echo $CONTEXTS`; do
                DIR=$(readlink -f $c-20* | tail -1)
                for f in `ls $DIR`; do
                    python ~/saasherder/check_image.py $DIR/$f
                done
            done
    <<: *job_template_defaults

- job:
    name: 'devtools-saasherder-test-master'
    defaults: global
    node: devtools
    properties:
        - github:
            url: https://github.com/openshiftio/saasherder
    scm:
        - git:
            url: https://github.com/openshiftio/saasherder.git
            shallow_clone: true
            branches:
                - master
    triggers:
        - github
    builders:
        - shell: |
            # testing out the cico client
            set +e
            set +x
            env > jenkins-env
            export CICO_API_KEY=$(cat ~/duffy.key )
            # get node
            n=1
            while true
            do
                cico_output=$(cico node get -f value -c ip_address -c comment)
                if [ $? -eq 0 ]; then
                    read CICO_hostname CICO_ssid <<< $cico_output
                    if  [ ! -z "$CICO_hostname" ]; then
                        # we got hostname from cico
                        break
                    fi
                    echo "'cico node get' succeed, but can't get hostname from output"
                fi
                if [ $n -gt 5 ]; then
                    # give up after 5 tries
                    echo "giving up on 'cico node get'"
                    exit 1
                fi
                echo "'cico node get' failed, trying again in 60s ($n/5)"
                n=$[$n+1]
                sleep 60
            done
            echo 'Using Host' $CICO_hostname
            set -x
            sshopts="-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root"
            ssh_cmd="ssh $sshopts $CICO_hostname"
            $ssh_cmd yum -y install rsync
            rsync -e "ssh $sshopts" -Ha $(pwd)/ $CICO_hostname:payload
            $ssh_cmd -t "cd payload && /bin/bash cico_test.sh"
            rtn_code=$?
            if [ $rtn_code -eq 0 ]; then
              cico node done $CICO_ssid
              set -ex
              python setup.py install --user
              mkdir -p ~/saasherder/
              cp fetch_and_apply.sh ~/saasherder/fetch_and_apply.sh
              cp check_image.py ~/saasherder/check_image.py
            else
              # fail mode gives us 12 hrs to debug the machine
              curl "http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&ssid=$CICO_ssid"
            fi
            exit $rtn_code

- project:
    name: devtools
    jobs:
        - '{ci_project}-{git_repo}-jjb-test':
            git_organization: almighty
            git_repo: almighty-jobs
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_pr_test.sh'
        - '{ci_project}-{git_repo}':
            git_repo: fabric8-wit
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '20m'
        - '{ci_project}-{git_repo}-coverage':
            git_repo: fabric8-wit
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_coverage.sh'
            timeout: '45m'
        - '{ci_project}-{git_repo}':
            git_repo: fabric8-devdoc
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '20m'
        - '{ci_project}-{git_repo}':
            git_organization: fabric8-ui
            git_repo: fabric8-ui
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '50m'
        - '{ci_project}-{git_repo}':
            git_organization: openshiftio
            git_repo: openshift.io
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '30m'
            github_hooks: true
        - '{ci_project}-{git_repo}':
            git_organization: fabric8io
            git_repo: fabric8-forker
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '10m'
        - '{ci_project}-{git_repo}':
            git_organization: fabric8-services
            git_repo: fabric8-tenant
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '10m'
        - '{ci_project}-{git_repo}':
            git_organization: fabric8-services
            git_repo: fabric8-notification
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '10m'
        - '{ci_project}-{git_repo}':
            git_organization: openshiftio
            git_repo: tenant-log-indirector
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '10m'
        - '{ci_project}-fabric8-devdoc-build-master':
            git_repo: fabric8-devdoc
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            timeout: '30m'
        - '{ci_project}-{git_repo}-build-master':
            git_repo: fabric8-wit
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            saas_git: saas-openshiftio
            timeout: '20m'
        - '{ci_project}-{git_repo}-build-master-coverage':
            git_repo: fabric8-wit
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_coverage.sh'
            svc_name: core
            timeout: '25m'
        - '{ci_project}-{git_repo}-build-master':
            git_organization: aslakknutsen
            git_repo: almighty-performance
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            svc_name: aslak-almighty-perf
            timeout: '20m'
        - '{ci_project}-{git_repo}':
            git_organization: aslakknutsen
            git_repo: almighty-performance
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '10m'
        - '{ci_project}-{git_repo}-npm-publish-build-master':
            git_organization: fabric8-ui
            git_repo: fabric8-ui
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            saas_git: saas-openshiftio
            timeout: '20m'
        - '{ci_project}-{git_repo}-build-master':
            git_organization: openshiftio
            git_repo: openshift.io
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            saas_git: saas-openshiftio
            timeout: '20m'
        - '{ci_project}-{git_repo}-build-master':
            git_organization: fabric8io
            git_repo: fabric8-forker
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            svc_name: f8forker
            timeout: '10m'
        - '{ci_project}-{git_repo}-build-master':
            git_organization: fabric8-services
            git_repo: fabric8-tenant
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            saas_git: saas-openshiftio
            timeout: '10m'
        - '{ci_project}-{git_repo}-build-master':
            git_organization: fabric8-services
            git_repo: fabric8-notification
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            saas_git: saas-openshiftio
            timeout: '10m'
        - '{ci_project}-{git_repo}-build-master':
            git_organization: openshiftio
            git_repo: tenant-log-indirector
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            saas_git: saas-openshiftio
            timeout: '10m'
        - '{ci_project}-{git_repo}-build-che-credentials-master':
            git_organization: redhat-developer
            git_repo: che-starter
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            saas_git: saas-openshiftio
            timeout: '20m'
        - '{ci_project}-{git_repo}-build-master':
            git_organization: redhat-developer
            git_repo: che-vertx-server
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            timeout: '20m'
        - '{ci_project}-{git_repo}':
            git_organization: redhat-developer
            git_repo: che-starter
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '20m'
        - '{ci_project}-{git_repo}-periodical':
            git_organization: redhat-developer
            git_repo: che-functional-tests
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_EE_tests.sh'
            timeout: '20m'
        - '{ci_project}-{git_repo}-prcheck':
            git_organization: redhat-developer
            git_repo: che-functional-tests
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_EE_tests.sh'
            timeout: '20m'
        - '{ci_project}-{git_repo}':
            git_organization: fabric8-ui
            git_repo: ngx-widgets
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '20m'
        - '{ci_project}-{git_repo}-npm-publish-build-master':
            git_organization: fabric8-ui
            git_repo: ngx-widgets
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
        - '{ci_project}-{git_repo}':
            git_organization: fabric8-ui
            git_repo: ngx-login-client
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '20m'
        - '{ci_project}-{git_repo}-npm-publish-build-master':
            git_organization: fabric8-ui
            git_repo: ngx-login-client
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
        - '{ci_project}-{git_repo}':
            git_organization: fabric8-ui
            git_repo: ngx-fabric8-wit
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '20m'
        - '{ci_project}-{git_repo}-wit-go-benchmarks':
            git_organization: fabric8-services
            git_repo: fabric8-wit
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_go_benchmarks.sh'
            timeout: '20m'
        - '{ci_project}-{git_repo}-npm-publish-build-master':
            git_organization: fabric8-ui
            git_repo: ngx-fabric8-wit
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
        - '{ci_project}-{git_repo}-build-master':
            git_organization: fabric8-services
            git_repo: keycloak-deployment
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            timeout: '50m'
            saas_git: saas-openshiftio:keycloak
            prj_name: dsaas-keycloak-preview
        - '{ci_project}-{git_repo}':
            git_organization: fabric8-services
            git_repo: keycloak-deployment
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '60m'
        - '{ci_project}-{git_repo}':
            git_organization: ldimaggi
            git_repo: perfcake
            ci_project: 'devtools'
            ci_cmd: '/bin/bash POC_perf_test.sh'
            timeout: '20m'
        - '{ci_project}-{git_repo}-build-master':
            git_organization: redhat-developer
            git_repo: osd-monitor-poc
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build.sh'
            saas_git: saas-openshiftio
        - '{ci_project}-{git_repo}':
            git_organization: fabric8-ui
            git_repo: ngx-base
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '20m'
        - '{ci_project}-{git_repo}-npm-publish-build-master':
            git_organization: fabric8-ui
            git_repo: ngx-base
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            svc_name: fabric8-ui-ngx-base
        - '{ci_project}-{git_repo}-generator-build-master':
            git_organization: openshiftio
            git_repo: launchpad-frontend
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            svc_name: launchpad-frontend
            saas_git: saas-launchpad
            prj_name: launchpad-preview
        - '{ci_project}-{git_repo}-generator-build-master':
            git_organization: openshiftio
            git_repo: launchpad-backend
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            svc_name: launchpad-backend
            saas_git: saas-launchpad
            prj_name: launchpad-preview
        - '{ci_project}-{git_repo}-generator-build-master':
            git_organization: openshiftio
            git_repo: launchpad-missioncontrol
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            saas_git: saas-launchpad
            prj_name: launchpad-preview
        - '{ci_project}-{git_repo}-generator-build-master':
            git_organization: openshiftio
            git_repo: launchpad-templates
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            saas_git: saas-launchpad
            prj_name: launchpad-preview
        - '{ci_project}-{git_repo}':
            git_organization: openshiftio
            git_repo: appdev-documentation
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_test.sh'
            timeout: '20m'
        - '{ci_project}-{git_repo}-build-master':
            git_organization: openshiftio
            git_repo: status-api
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            saas_git: saas-openshiftio
        - '{ci_project}-{git_repo}':
            git_organization: fabric8-ui
            git_repo: fabric8-recommender
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '30m'
        - '{ci_project}-{git_repo}-promote-to-prod':
            git_repo: saas-openshiftio
            ci_project: 'devtools'
        - '{ci_project}-{git_repo}-promote-to-prod':
            git_repo: saas-analytics
            ci_project: 'devtools'
        - '{ci_project}-{git_repo}-promote-to-prod':
            git_repo: saas-launchpad
            ci_project: 'devtools'
        - '{ci_project}-{git_repo}-promote-to-prod-test':
            git_repo: saas-openshiftio
            git_organization: openshiftio
            ci_project: 'devtools'
        - '{ci_project}-{git_repo}-promote-to-prod-test':
            git_repo: saas-analytics
            git_organization: openshiftio
            ci_project: 'devtools'
        - '{ci_project}-{git_repo}-promote-to-prod-test':
            git_repo: saas-launchpad
            git_organization: openshiftio
            ci_project: 'devtools'
        - '{ci_project}-{git_repo}-build-master':
            git_repo: fabric8-auth
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            saas_git: saas-openshiftio
            timeout: '20m'
        - '{ci_project}-{git_repo}':
            git_repo: fabric8-auth
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '20m'
        - '{ci_project}-{git_repo}-coverage':
            git_repo: fabric8-auth
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_coverage.sh'
            timeout: '45m'
        - '{ci_project}-{git_repo}-build-master-coverage':
            git_repo: fabric8-auth
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_coverage.sh'
            timeout: '25m'
        - '{ci_project}-{git_repo}-generator-build-master':
            git_organization: openshiftio
            git_repo: appdev-documentation
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            saas_git: saas-launchpad
            prj_name: launchpad-preview
        - '{ci_project}-{git_repo}-build-master':
            git_repo: fabric8-online-docs
            git_organization: fabric8io
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            saas_git: saas-openshiftio
            timeout: '20m'
        - '{ci_project}-{git_repo}-build-master':
            git_organization: fabric8io
            git_repo: fabric8-test
            ci_project: 'devtools'
            ci_cmd: 'cd ee_tests/ && /bin/bash cico_build_deploy.sh'
            timeout: '30m'
        - 'devtools-test-end-to-end-{test_url}-{test_suite}':
            test_url: openshift.io
            test_suite: runTest
            after: devtools-fabric8-test-build-master   
            oso_token_creds: de0940f2-f31f-4186-85e2-37d42bddcf5b
            ee_test_start_time: '0 */2 * * *'
            timeout: 60m
        - 'devtools-test-end-to-end-{test_url}-{test_suite}':
            test_url: openshift.io
            test_suite: quickstartTest
            after: devtools-test-end-to-end-openshift.io-runTest
            oso_token_creds: de0940f2-f31f-4186-85e2-37d42bddcf5b
            ee_test_start_time: '30 */2 * * *'
            timeout: 60m
        - 'devtools-test-end-to-end-{test_url}-{test_suite}':
            test_url: openshift.io
            test_suite: chequickstartTest
            after: devtools-test-end-to-end-openshift.io-quickstartTest
            oso_token_creds: de0940f2-f31f-4186-85e2-37d42bddcf5b
            timeout: 60m
            ee_test_start_time: '0 1-23/2 * * *'
        - 'devtools-test-end-to-end-{test_url}-{test_suite}':
            test_url: prod-preview.openshift.io
            test_suite: runTest
            after: fabric8io-fabric8-test-build-master
            oso_token_creds: bca7a2b5-87b9-46bb-93a8-e66a05a5d7c6
            ee_test_start_time: '0 */2 * * *'
            timeout: 60m
        - 'devtools-test-end-to-end-{test_url}-{test_suite}':
            test_url: prod-preview.openshift.io
            test_suite: quickstartTest
            after: devtools-test-end-to-end-prod-preview.openshift.io-runTest
            oso_token_creds: bca7a2b5-87b9-46bb-93a8-e66a05a5d7c6
            timeout: 60m
            ee_test_start_time: '30 */2 * * *'
        - 'devtools-test-end-to-end-{test_url}-{test_suite}':
            test_url: prod-preview.openshift.io
            test_suite: chequickstartTest
            after: devtools-test-end-to-end-prod-preview.openshift.io-chequickstartTest
            oso_token_creds: bca7a2b5-87b9-46bb-93a8-e66a05a5d7c6
            timeout: 60m
            ee_test_start_time: '0 1-23/2 * * *'
        - '{ci_project}-{git_repo}-fabric8-analytics':
            git_organization: fabric8-analytics
            git_repo: fabric8-analytics-pgbouncer
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '10m'
        - '{ci_project}-f8a-master-deploy-e2e-test':
            git_organization: fabric8-analytics
            git_repo: fabric8-analytics-common
            ci_project: 'devtools'
            timeout: '20m'
            prj_name: bayesian-preview
            saas_git: saas-analytics
        - '{ci_project}-{git_repo}-f8a-build-master':
            git_organization: fabric8-analytics
            git_repo: fabric8-analytics-pgbouncer
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            saas_git: saas-analytics
            deployment_units: 'fabric8-analytics-pgbouncer'
            deployment_configs: 'bayesian-pgbouncer'
        - '{ci_project}-{git_repo}-fabric8-analytics':
            git_organization: fabric8-analytics
            git_repo: fabric8-analytics-jobs
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '20m'
        - '{ci_project}-{git_repo}-f8a-build-master':
            git_organization: fabric8-analytics
            git_repo: fabric8-analytics-jobs
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            saas_git: saas-analytics
            deployment_units: 'jobs'
            deployment_configs: 'bayesian-jobs'
            timeout: '20m'
        - '{ci_project}-{git_repo}-fabric8-analytics':
            git_organization: fabric8-analytics
            git_repo: anitya-docker
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '20m'
        - '{ci_project}-{git_repo}-f8a-build-master':
            git_organization: fabric8-analytics
            git_repo: anitya-docker
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            saas_git: saas-analytics
            deployment_units: 'anitya'
            deployment_configs: 'bayesian-anitya'
            timeout: '20m'
        - '{ci_project}-{git_repo}-fabric8-analytics':
            git_organization: fabric8-analytics
            git_repo: gremlin-docker
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '30m'
        - '{ci_project}-{git_repo}-f8a-build-master':
            git_organization: fabric8-analytics
            git_repo: gremlin-docker
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            saas_git: saas-analytics
            deployment_units: 'gremlin-http'
            deployment_configs: 'bayesian-gremlin-server'
            timeout: '30m'
        - '{ci_project}-{git_repo}-fabric8-analytics':
            git_organization: fabric8-analytics
            git_repo: fabric8-analytics-stack-analysis
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '20m'
        - '{ci_project}-{git_repo}-f8a-build-master':
            git_organization: fabric8-analytics
            git_repo: fabric8-analytics-stack-analysis
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            saas_git: saas-analytics
            deployment_units: 'kronos-pypi kronos-maven'
            deployment_configs: 'bayesian-kronos-pypi bayesian-kronos-maven'
            timeout: '20m'
        - '{ci_project}-{git_repo}-fabric8-analytics':
            git_organization: fabric8-analytics
            git_repo: fabric8-analytics-license-analysis
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '20m'
        - '{ci_project}-{git_repo}-f8a-build-master':
            git_organization: fabric8-analytics
            git_repo: fabric8-analytics-license-analysis
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            saas_git: saas-analytics
            deployment_units: 'license-analysis'
            deployment_configs: 'f8a-license-analysis'
            timeout: '20m'
        - '{ci_project}-{git_repo}-fabric8-analytics':
            git_organization: fabric8-analytics
            git_repo: fabric8-analytics-worker
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '30m'
        - '{ci_project}-{git_repo}-f8a-build-master':
            git_organization: fabric8-analytics
            git_repo: fabric8-analytics-worker
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            saas_git: saas-analytics
            deployment_units: 'worker-ingestion worker-api worker-ingestion-graph-import worker-api-graph-import'
            deployment_configs: 'bayesian-worker-ingestion bayesian-worker-api bayesian-worker-ingestion-graph-import bayesian-worker-api-graph-import'
            timeout: '30m'
        - '{ci_project}-{git_repo}-fabric8-analytics':
            git_organization: fabric8-analytics
            git_repo: fabric8-analytics-server
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '30m'
        - '{ci_project}-{git_repo}-f8a-build-master':
            git_organization: fabric8-analytics
            git_repo: fabric8-analytics-server
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            saas_git: saas-analytics
            deployment_units: 'api'
            deployment_configs: 'bayesian-api'
            timeout: '30m'
        - '{ci_project}-{git_repo}-fabric8-analytics-pylint':
            git_repo: fabric8-analytics-server
        - '{ci_project}-{git_repo}-fabric8-analytics':
            git_organization: fabric8-analytics
            git_repo: fabric8-analytics-worker-base
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '30m'
        - '{ci_project}-{git_repo}-f8a-build-master':
            git_organization: fabric8-analytics
            git_repo: fabric8-analytics-worker-base
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            saas_git: saas-analytics
            skip_deploy: 1
            timeout: '30m'
        - '{ci_project}-{git_repo}-fabric8-analytics':
            git_organization: fabric8-analytics
            git_repo: fabric8-analytics-cvedb-s3-dump-docker
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '20m'
        - '{ci_project}-{git_repo}-f8a-build-master':
            git_organization: fabric8-analytics
            git_repo: fabric8-analytics-cvedb-s3-dump-docker
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            saas_git: saas-analytics
            skip_deploy: 1
            timeout: '20m'
        - '{ci_project}-{git_repo}-fabric8-analytics':
            git_organization: fabric8-analytics
            git_repo: fabric8-analytics-data-model
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '20m'
        - '{ci_project}-{git_repo}-f8a-build-master':
            git_organization: fabric8-analytics
            git_repo: fabric8-analytics-data-model
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            saas_git: saas-analytics
            deployment_units: 'data-importer'
            deployment_configs: 'bayesian-data-importer'
            timeout: '20m'
        - '{ci_project}-{git_repo}-fabric8-analytics':
            git_organization: fabric8-analytics
            git_repo: fabric8-analytics-firehose-fetcher
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '20m'
        - '{ci_project}-{git_repo}-f8a-build-master':
            git_organization: fabric8-analytics
            git_repo: fabric8-analytics-firehose-fetcher
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            saas_git: saas-analytics
            deployment_units: 'f8a-firehose-fetcher'
            deployment_configs: 'f8a-firehose-fetcher'
            timeout: '20m'
        - '{ci_project}-{git_repo}-fabric8-analytics':
            git_organization: fabric8-analytics
            git_repo: fabric8-analytics-stack-report-ui
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '20m'
        - '{ci_project}-{git_repo}-f8a-build-master':
            git_organization: fabric8-analytics
            git_repo: fabric8-analytics-stack-report-ui
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            saas_git: saas-analytics
            deployment_units: 'stack-report-ui'
            deployment_configs: 'fabric8-analytics-stack-report-ui'
            timeout: '20m'
        - '{ci_project}-{git_repo}-fabric8-analytics':
            git_organization: fabric8-analytics
            git_repo: fabric8-analytics-scaler
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '20m'
        - '{ci_project}-{git_repo}-f8a-build-master':
            git_organization: fabric8-analytics
            git_repo: fabric8-analytics-scaler
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            saas_git: saas-analytics
            deployment_units: 'worker-scaler'
            deployment_configs: 'f8a-worker-scaler'
            timeout: '20m'
        - '{ci_project}-{git_repo}-fabric8-analytics':
            git_organization: fabric8-analytics
            git_repo: fabric8-analytics-vscode-extension
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '20m'
        - '{ci_project}-{git_repo}-f8a-build-master':
            git_organization: fabric8-analytics
            git_repo: fabric8-analytics-vscode-extension
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            timeout: '20m'
