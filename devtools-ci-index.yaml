- defaults:
    name: global
    timeout: '15m'
    jobdescription: "Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/almighty/almighty-jobs"
    git_organization: fabric8-services
    github_user: almighty-bot
    branch: master

- admin_list_defaults: &admin_list_defaults
    name: 'admin_list_defaults'
    admin-list:
        - kbsingh
        - aslakknutsen
        - kwk
        - sbose78
        - tsmaeder
        - maxandersen
        - bartoszmajsak
        - pmuir
        - pranavgore09
        - baijum
        - DhritiShikhar
        - joshuawilson
        - Ritsyy
        - sanbornsen
        - nimishamukherjee
        - SMahil
        - xcoulon
        - alexeykazakov
        - michaelkleinhenz
        - ppitonak
        - naina-verma
        - ldimaggi
        - VineetReynolds
        - hectorj2f
        - ibuziuk
        - debloper
        - vikram-raj
        - dlabrecq
        - dgutride
        - mindreeper2420
        - invincibleJai
        - arunkumars08
        - fabric8cd
        - mharpur
        - corinnekrych
        - mlabuda
        - jstrachan
        - Katka92

- github_pull_request_defaults: &github_pull_request_defaults
    name: 'github_pull_request_defaults'
    <<: *admin_list_defaults
    cron: '* * * * *'
    github-hooks: false
    permit-all: false
    trigger-phrase: '.*\[test\].*'
    allow-whitelist-orgs-as-admins: true
    status-context: "ci.centos.org PR build"

- trigger:
    name: githubprb
    triggers:
      - github-pull-request:
          <<: *github_pull_request_defaults

- scm:
    name: git-scm
    scm:
        - git:
            credentials-id: "c4872223-4024-4cd4-8e09-1bbdc7d6e971"
            url: "{git_url}"
            skip-tag: True
            git-tool: ci-git
            refspec: '+refs/pull/*:refs/remotes/origin/pr/*'
            branches:
                - '${{ghprbActualCommit}}'

- wrapper:
    name: npm-build-deliver-creds
    wrappers:
        - credentials-binding:
            - text:
                credential-id: a9450b57-2492-4c47-9bd1-cabf87f74bb1
                variable: GH_TOKEN
            - text:
                credential-id: f8f7db1d-87c8-4f64-bae7-584142e44f8e
                variable: NPM_TOKEN

- wrapper:
    name: che_credentials_wrapper
    wrappers:
        - credentials-binding:
            - username-password-separated:
                credential-id: b2ae0d9a-307a-4df3-b027-9aa0c22e29dd
                username: RHCHEBOT_DOCKER_HUB_USERNAME
                password: RHCHEBOT_DOCKER_HUB_PASSWORD
            - file:
                credential-id: 93da78ec-7785-49ab-a1ef-586424b3e94f
                variable: creds_config_file

- job_template_defaults: &job_template_defaults
    name: 'job_template_defaults'
    description: |
      {jobdescription}
    node: "{ci_project}"
    concurrent: true
    properties:
        - github:
            url: https://github.com/{git_organization}/{git_repo}/
    scm:
        - git-scm:
            git_url: https://{github_user}@github.com/{git_organization}/{git_repo}.git
    triggers:
        - githubprb
    builders:
        - shell: |
            # testing out the cico client
            set +e
            export CICO_API_KEY=$(cat ~/duffy.key )
            # get node
            n=1
            while true
            do
                cico_output=$(cico node get -f value -c ip_address -c comment)
                if [ $? -eq 0 ]; then
                    read CICO_hostname CICO_ssid <<< $cico_output
                    if  [ ! -z "$CICO_hostname" ]; then
                        # we got hostname from cico
                        break
                    fi
                    echo "'cico node get' succeed, but can't get hostname from output"
                fi
                if [ $n -gt 5 ]; then
                    # give up after 5 tries
                    echo "giving up on 'cico node get'"
                    exit 1
                fi
                echo "'cico node get' failed, trying again in 60s ($n/5)"
                n=$[$n+1]
                sleep 60
            done
            sshopts="-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root"
            ssh_cmd="ssh $sshopts $CICO_hostname"
            env > jenkins-env
            $ssh_cmd yum -y install rsync
            git rebase --preserve-merges origin/${{ghprbTargetBranch}} \
            && rsync -e "ssh $sshopts" -Ha $(pwd)/ $CICO_hostname:payload \
            && /usr/bin/timeout {timeout} $ssh_cmd -t "cd payload && {ci_cmd}"
            rtn_code=$?
            if [ $rtn_code -eq 0 ]; then
                cico node done $CICO_ssid
            else
                if [[ $rtn_code -eq 124 ]]; then
                   echo "BUILD TIMEOUT";
                   cico node done $CICO_ssid
                else
                    # fail mode gives us 12 hrs to debug the machine
                    curl "http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&ssid=$CICO_ssid"
                fi
            fi
            exit $rtn_code

- job-template:
    name: '{ci_project}-{git_repo}'
    <<: *job_template_defaults

- job-template:
    name: '{ci_project}-{git_repo}-coverage'
    triggers:
      - github-pull-request:
          status-context: "ci.centos.org PR build (coverage)"
          <<: *github_pull_request_defaults
    <<: *job_template_defaults

- job-template: &job_template_build_defaults
    name: 'job_template_build_defaults'
    description: |
      {jobdescription}
    node: "{ci_project}"
    properties:
        - github:
            url: https://github.com/{git_organization}/{git_repo}/
    scm:
        - git:
            url: https://github.com/{git_organization}/{git_repo}.git
            shallow_clone: true
            branches:
                - '{branch}'
    triggers:
        - github
    svc_name: none
    prj_name: dsaas-preview
    template_name: none
    builders:
        - shell: |
            # Verify Job configuration
            if [ "{svc_name}" == "none" && "{template_name}" == "none" ]; then
                echo "require either svc_name or template_name to be set"
                exit 1
            fi
            # testing out the cico client
            set +e
            export CICO_API_KEY=$(cat ~/duffy.key )
            # get node
            n=1
            while true
            do
                cico_output=$(cico node get -f value -c ip_address -c comment)
                if [ $? -eq 0 ]; then
                    read CICO_hostname CICO_ssid <<< $cico_output
                    if  [ ! -z "$CICO_hostname" ]; then
                        # we got hostname from cico
                        break
                    fi
                    echo "'cico node get' succeed, but can't get hostname from output"
                fi
                if [ $n -gt 5 ]; then
                    # give up after 5 tries
                    echo "giving up on 'cico node get'"
                    exit 1
                fi
                echo "'cico node get' failed, trying again in 60s ($n/5)"
                n=$[$n+1]
                sleep 60
            done
            sshopts="-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root"
            ssh_cmd="ssh $sshopts $CICO_hostname"
            env > jenkins-env
            $ssh_cmd yum -y install rsync
            rsync -e "ssh $sshopts" -Ha $(pwd)/ $CICO_hostname:payload
            $ssh_cmd -t "cd payload && {ci_cmd}"
            rtn_code=$?
            if [ $rtn_code -eq 0 ]; then
              cico node done $CICO_ssid
              if [ "{svc_name}" != "none" ]; then
                oc deploy {svc_name} --latest -n {prj_name}
              fi
              if [ "{template_name}" != "none" ]; then
                if oc process -f {template_name} --parameters | grep IMAGE_TAG; then
                    TAG=$(echo $GIT_COMMIT | cut -c1-6)
                    PARAMETERS="IMAGE_TAG=$TAG"
                fi
                oc process -f {template_name} $PARAMETERS | oc apply -f - -n {prj_name}
              fi
            else
              # fail mode gives us 12 hrs to debug the machine
              curl "http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&ssid=$CICO_ssid"
            fi
            exit $rtn_code

- job-template: &job_template_publish_branch_defaults
    name: 'job_template_publish_branch_defaults'
    description: |
      {jobdescription}
    node: "{ci_project}"
    properties:
        - github:
            url: https://github.com/{git_organization}/{git_repo}/
    scm:
        - git:
            url: https://github.com/{git_organization}/{git_repo}.git
            shallow_clone: true
            branches:
                - '{branch}'
    triggers:
        - githubprb
    svc_name: none
    builders:
        - shell: |
            # testing out the cico client
            set +e
            export CICO_API_KEY=$(cat ~/duffy.key )
            # get node
            n=1
            while true
            do
                cico_output=$(cico node get -f value -c ip_address -c comment)
                if [ $? -eq 0 ]; then
                    read CICO_hostname CICO_ssid <<< $cico_output
                    if  [ ! -z "$CICO_hostname" ]; then
                        # we got hostname from cico
                        break
                    fi
                    echo "'cico node get' succeed, but can't get hostname from output"
                fi
                if [ $n -gt 5 ]; then
                    # give up after 5 tries
                    echo "giving up on 'cico node get'"
                    exit 1
                fi
                echo "'cico node get' failed, trying again in 60s ($n/5)"
                n=$[$n+1]
                sleep 60
            done
            sshopts="-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root"
            ssh_cmd="ssh $sshopts $CICO_hostname"
            env > jenkins-env
            $ssh_cmd yum -y install rsync
            rsync -e "ssh $sshopts" -Ha $(pwd)/ $CICO_hostname:payload
            $ssh_cmd -t "cd payload && {ci_cmd}"
            rtn_code=$?
            if [ $rtn_code -eq 0 ]; then
              cico node done $CICO_ssid
              if [ "{svc_name}" != "none" ]; then
                oc deploy {svc_name} --latest
              fi
            else
              # fail mode gives us 12 hrs to debug the machine
              curl "http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&ssid=$CICO_ssid"
            fi
            exit $rtn_code

- job-template:
    name: '{ci_project}-{git_repo}-build-master'
    scm:
        - git:
            url: https://github.com/{git_organization}/{git_repo}.git
            shallow_clone: true
            branches:
                - master
    <<: *job_template_build_defaults

- job-template:
    name: '{ci_project}-{git_repo}-build-che-credentials-master'
    wrappers:
        - che_credentials_wrapper
    scm:
        - git:
            url: https://github.com/{git_organization}/{git_repo}.git
            shallow_clone: true
            branches:
                - master
    builders:
        - shell: |
            # testing out the cico client
            set +e
            set +x
            env > jenkins-env
            cat $creds_config_file >> jenkins-env
            export CICO_API_KEY=$(cat ~/duffy.key )
            # get node
            n=1
            while true
            do
                cico_output=$(cico node get -f value -c ip_address -c comment)
                if [ $? -eq 0 ]; then
                    read CICO_hostname CICO_ssid <<< $cico_output
                    if  [ ! -z "$CICO_hostname" ]; then
                        # we got hostname from cico
                        break
                    fi
                    echo "'cico node get' succeed, but can't get hostname from output"
                fi
                if [ $n -gt 5 ]; then
                    # give up after 5 tries
                    echo "giving up on 'cico node get'"
                    exit 1
                fi
                echo "'cico node get' failed, trying again in 60s ($n/5)"
                n=$[$n+1]
                sleep 60
            done
            echo 'Using Host' $CICO_hostname
            set -x
            sshopts="-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root"
            ssh_cmd="ssh $sshopts $CICO_hostname"
            $ssh_cmd yum -y install rsync
            rsync -e "ssh $sshopts" -Ha $(pwd)/ $CICO_hostname:payload
            $ssh_cmd -t "cd payload && {ci_cmd}"
            rtn_code=$?
            cico node done $CICO_ssid
            exit $rtn_code
    <<: *job_template_build_defaults

- job-template:
    name: '{ci_project}-{git_repo}-publish-branch'
    scm:
        - git:
            url: https://github.com/{git_organization}/{git_repo}.git
            shallow_clone: true
            branches:
                - '{branch}'
    triggers:
      - github-pull-request:
          white-list-target-branches:
             - '{branch}'
          <<: *github_pull_request_defaults
    <<: *job_template_publish_branch_defaults

- job-template:
    name: '{ci_project}-{git_repo}-build-master-coverage'
    scm:
        - git:
            url: https://github.com/{git_organization}/{git_repo}.git
            shallow_clone: true
            branches:
                - master
    <<: *job_template_build_defaults

- job-template:
    name: '{ci_project}-{git_repo}-npm-publish-build-master'
    description: |
      {jobdescription}
      If all goes well, npm is published
    node: "{ci_project}"
    wrappers:
            - npm-build-deliver-creds
    properties:
        - github:
            url: https://github.com/{git_organization}/{git_repo}/
        - inject:
            properties-content: |
               JENKINS_URL=https://ci.centos.org
    scm:
        - git:
            url: https://{github_user}@github.com/{git_organization}/{git_repo}.git
            credentials-id: "c4872223-4024-4cd4-8e09-1bbdc7d6e971"
            git-tool: ci-git
            shallow_clone: false
            skip-tag: True
            branches:
                - master

    triggers:
        - github
    svc_name: none
    builders:
        - shell: |
            # testing out the cico client
            set +e
            export CICO_API_KEY=$(cat ~/duffy.key )
            # get node
            n=1
            while true
            do
                cico_output=$(cico node get -f value -c ip_address -c comment)
                if [ $? -eq 0 ]; then
                    read CICO_hostname CICO_ssid <<< $cico_output
                    if  [ ! -z "$CICO_hostname" ]; then
                        # we got hostname from cico
                        break
                    fi
                    echo "'cico node get' succeed, but can't get hostname from output"
                fi
                if [ $n -gt 5 ]; then
                    # give up after 5 tries
                    echo "giving up on 'cico node get'"
                    exit 1
                fi
                echo "'cico node get' failed, trying again in 60s ($n/5)"
                n=$[$n+1]
                sleep 60
            done
            sshopts="-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root"
            ssh_cmd="ssh $sshopts $CICO_hostname"
            env > jenkins-env
            $ssh_cmd yum -y install rsync
            rsync -e "ssh $sshopts" -Ha $(pwd)/ $CICO_hostname:payload
            $ssh_cmd -t "cd payload && {ci_cmd}"
            rtn_code=$?
            if [ $rtn_code -eq 0 ]; then
              cico node done $CICO_ssid
              if [ "{svc_name}" != "none" ]; then
                oc deploy {svc_name} --latest
              fi
            else
              # fail mode gives us 12 hrs to debug the machine
              curl "http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&ssid=$CICO_ssid"
            fi
            exit $rtn_code

- job-template:
    name: '{ci_project}-fabric8-devdoc-build-master'
    description: |
      {jobdescription}
      If all goes well, gh-pages is pushed
    node: "{ci_project}"
    properties:
        - github:
            url: https://github.com/{git_organization}/{git_repo}/
    scm:
        - git:
            url: https://{github_user}@github.com/{git_organization}/{git_repo}.git
            credentials-id: "c4872223-4024-4cd4-8e09-1bbdc7d6e971"
            git-tool: ci-git
            shallow_clone: false
            branches:
                - master

    triggers:
        - github
    builders:
        - shell: |
            # testing out the cico client
            set +e
            export CICO_API_KEY=$(cat ~/duffy.key )
            # get node
            n=1
            while true
            do
                cico_output=$(cico node get -f value -c ip_address -c comment)
                if [ $? -eq 0 ]; then
                    read CICO_hostname CICO_ssid <<< $cico_output
                    if  [ ! -z "$CICO_hostname" ]; then
                        # we got hostname from cico
                        break
                    fi
                    echo "'cico node get' succeed, but can't get hostname from output"
                fi
                if [ $n -gt 5 ]; then
                    # give up after 5 tries
                    echo "giving up on 'cico node get'"
                    exit 1
                fi
                echo "'cico node get' failed, trying again in 60s ($n/5)"
                n=$[$n+1]
                sleep 60
            done
            sshopts="-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root"
            ssh_cmd="ssh $sshopts $CICO_hostname"
            env > jenkins-env
            $ssh_cmd yum -y install rsync
            rsync -e "ssh $sshopts" -Ha $(pwd)/ $CICO_hostname:payload
            /usr/bin/timeout {timeout} $ssh_cmd -t "cd payload && {ci_cmd}"
            rtn_code=$?
            if [[ $rtn_code -eq 124 ]]; then
               echo "BUILD TIMEOUT";
            else
               rsync -delete -PHva -e "ssh $sshopts" $CICO_hostname:payload/ $(pwd)
               rtn_code=$?
            fi
            cico node done $CICO_ssid
            exit $rtn_code
    publishers:
      - git:
          push-only-if-success: true
          push-merge: true
          force-push: true
          branches:
            - branch:
                remote: origin
                name: "gh-pages"


- job:
    name: 'eclipse-che-build-openshift-connector'
    wrappers:
        - che_credentials_wrapper
    defaults: global
    node: devtools
    properties:
        - github:
            url: https://github.com/eclipse/che
    scm:
        - git:
            url: https://github.com/eclipse/che.git
            shallow_clone: true
            branches:
                - openshift-connector
    triggers:
        - github
    builders:
        - trigger-builds:
            - project:
                - "devtools-build-run-che-build-master"
              current-parameters: true

- job:
    name: 'eclipse-che-promotion'

    parameters:
        - string:
            name: CHE_SERVER_STAGE_DOCKER_IMAGE
            description: "Full docker location with organization/repo:tag"

    wrappers:
        - che_credentials_wrapper
    defaults: global
    node: devtools
    builders:
        - shell: |
            # promoting to rhche
            set +e
            set +x

            # downloads staging image
            docker pull ${CHE_SERVER_STAGE_DOCKER_IMAGE}

            # rename to production organization
            CHE_SERVER_PROD_DOCKER_IMAGE="${CHE_SERVER_STAGE_DOCKER_IMAGE/rhchestage/rhche}"

            docker login -u ${RHCHEBOT_DOCKER_HUB_USERNAME} -p ${RHCHEBOT_DOCKER_HUB_PASSWORD} -e noreply@redhat.co

            # push to Docker hub
            docker tag ${CHE_SERVER_STAGE_DOCKER_IMAGE} ${CHE_SERVER_PROD_DOCKER_IMAGE}
            docker push ${CHE_SERVER_PROD_DOCKER_IMAGE}

- job:
    name: 'devtools-build-run-che-build-master'
    wrappers:
        - che_credentials_wrapper
        - credentials-binding:
            - text:
                credential-id: de793dce-5821-4182-af4f-6c7b42b5c21d
                variable: KEYCLOAK_TOKEN
            - username-password-separated:
                credential-id: ac51aeb0-a436-4a50-a71d-aa6f99075398
                username: OSIO_USERNAME
                password: OSIO_PASSWORD
    defaults: global
    node: devtools
    properties:
        - github:
            url: https://github.com/redhat-developer/rh-che/
    scm:
        - git:
            url: https://github.com/redhat-developer/rh-che.git
            shallow_clone: true
            branches:
                - master
    publishers:
        - junit:
            results: target/**/target/surefire-reports/*.xml
            allow-empty-results: true

    triggers:
        - github
    builders:
        - shell: |
            # testing out the cico client
            set +e
            set +x
            env > jenkins-env
            cat $creds_config_file >> jenkins-env
            export CICO_API_KEY=$(cat ~/duffy.key )
            # get node
            n=1
            while true
            do
                cico_output=$(cico node get -f value -c ip_address -c comment)
                if [ $? -eq 0 ]; then
                    read CICO_hostname CICO_ssid <<< $cico_output
                    if  [ ! -z "$CICO_hostname" ]; then
                        # we got hostname from cico
                        break
                    fi
                    echo "'cico node get' succeed, but can't get hostname from output"
                fi
                if [ $n -gt 5 ]; then
                    # give up after 5 tries
                    echo "giving up on 'cico node get'"
                    exit 1
                fi
                echo "'cico node get' failed, trying again in 60s ($n/5)"
                n=$[$n+1]
                sleep 60
            done
            echo 'Using Host' $CICO_hostname
            set -x
            sshopts="-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root"
            ssh_cmd="ssh $sshopts $CICO_hostname"
            $ssh_cmd yum -y install rsync
            rsync -e "ssh $sshopts" -Ha $(pwd)/ $CICO_hostname:payload
            $ssh_cmd -t "cd payload && /bin/bash cico_build.sh && /bin/bash cico_deploy.sh"
            rtn_code=$?
            rsync -e "ssh $sshopts" -Ha --include='surefire-reports/***' --include='*/' --exclude='*' $CICO_hostname:payload/target/ $(pwd)/target
            cico node done $CICO_ssid
            exit $rtn_code

- job:
    name: 'devtools-che-functional-tests'
    defaults: global
    node: devtools
    properties:
        - github:
            url: https://github.com/redhat-developer/che-functional-tests
    scm:
        - git:
            url: https://github.com/redhat-developer/che-functional-tests.git

            shallow_clone: true
            branches:
                - master
    triggers:
        - github
        - githubprb
    wrappers:
        - credentials-binding:
            - text:
                credential-id: de793dce-5821-4182-af4f-6c7b42b5c21d
                variable: KEYCLOAK_TOKEN
            - username-password-separated:
                credential-id: ac51aeb0-a436-4a50-a71d-aa6f99075398
                username: OSIO_USERNAME
                password: OSIO_PASSWORD
    builders:
        - shell: |
            set +e
            set +x
            env > jenkins-env
            cat $creds_config_file >> jenkins-env
            export CICO_API_KEY=$(cat ~/duffy.key )
            # get node
            n=1
            while true
            do
                cico_output=$(cico node get -f value -c ip_address -c comment)
                if [ $? -eq 0 ]; then
                    read CICO_hostname CICO_ssid <<< $cico_output
                    if  [ ! -z "$CICO_hostname" ]; then
                        # we got hostname from cico
                        break
                    fi
                    echo "'cico node get' succeed, but can't get hostname from output"
                fi
                if [ $n -gt 5 ]; then
                    # give up after 5 tries
                    echo "giving up on 'cico node get'"
                    exit 1
                fi
                echo "'cico node get' failed, trying again in 60s ($n/5)"
                n=$[$n+1]
                sleep 60
            done
            echo 'Using Host' $CICO_hostname
            set -x
            sshopts="-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root"
            ssh_cmd="ssh $sshopts $CICO_hostname"
            $ssh_cmd yum -y install rsync
            rsync -e "ssh $sshopts" -Ha $(pwd)/ $CICO_hostname:payload
            $ssh_cmd -t "cd payload && /bin/bash cico_run_EE_tests.sh"
            rtn_code=$?
            cico node done $CICO_ssid
            exit $rtn_code

- job:
    name: 'devtools-test-performance-core-db'
    defaults: global
    node: devtools
    properties:
        - github:
            url: https://github.com/aslakknutsen/almighty-performance
    scm:
        - git:
            url: https://github.com/aslakknutsen/almighty-performance.git
            shallow_clone: true
            branches:
                - master
    triggers:
        - timed: '15 00 * * *'
    builders:
        - shell: |
            set +e
            set +x
            oc set env dc almighty-performance RATE=120 DURATION=30s
            sleep 10
            oc scale --replicas=1 dc almighty-performance
            sleep 10
            oc scale --replicas=0 dc almighty-performance
            oc logs dc/almighty-performance --follow

- job:
    name: 'devtools-test-perfcake-performance-core-db'
    disabled: true
    defaults: global
    node: devtools
    properties:
        - github:
            url: https://github.com/ldimaggi/perfcake
    scm:
        - git:
            url: https://github.com/ldimaggi/perfcake.git
            shallow_clone: true
            branches:
                - master
    triggers:
        - timed: '1 22 * * *'
    builders:
        - shell: |
            set +e
            set +x
            env > jenkins-env
            cat $creds_config_file >> jenkins-env
            export CICO_API_KEY=$(cat ~/duffy.key )
            # get node
            n=1
            while true
            do
                cico_output=$(cico node get -f value -c ip_address -c comment)
                if [ $? -eq 0 ]; then
                    read CICO_hostname CICO_ssid <<< $cico_output
                    if  [ ! -z "$CICO_hostname" ]; then
                        # we got hostname from cico
                        break
                    fi
                    echo "'cico node get' succeed, but can't get hostname from output"
                fi
                if [ $n -gt 5 ]; then
                    # give up after 5 tries
                    echo "giving up on 'cico node get'"
                    exit 1
                fi
                echo "'cico node get' failed, trying again in 60s ($n/5)"
                n=$[$n+1]
                sleep 60
            done
            echo 'Using Host' $CICO_hostname
            set -x
            sshopts="-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root"
            ssh_cmd="ssh $sshopts $CICO_hostname"
            $ssh_cmd yum -y install rsync
            rsync -e "ssh $sshopts" -Ha $(pwd)/ $CICO_hostname:payload
            $ssh_cmd -t "cd payload && /bin/bash ./POC_perf_test.sh"
            rtn_code=$?
            cico node done $CICO_ssid
            exit $rtn_code
    publishers:
        - archive:
            artifacts: ./devtools-performance-results

- job:
    name: 'devtools-test-end-to-end'
    defaults: global
    node: devtools
    properties:
        - github:
            url: https://github.com/fabric8-ui/fabric8-ui
    scm:
        - git:
            url: https://github.com/fabric8-ui/fabric8-ui.git

            shallow_clone: true
            branches:
                - master
    triggers:
        - timed: '30 0,6,12,18 * * *'
    wrappers:
        - credentials-binding:
            - username-password-separated:
                credential-id: 9d2a233c-4350-49ab-983d-5b8d0de95f44
                username: EE_TEST_USERNAME
                password: EE_TEST_PASSWORD
    builders:
        - shell: |
            set +e
            set +x
            env > jenkins-env
            cat $creds_config_file >> jenkins-env
            export CICO_API_KEY=$(cat ~/duffy.key )
            # get node
            n=1
            while true
            do
                cico_output=$(cico node get -f value -c ip_address -c comment)
                if [ $? -eq 0 ]; then
                    read CICO_hostname CICO_ssid <<< $cico_output
                    if  [ ! -z "$CICO_hostname" ]; then
                        # we got hostname from cico
                        break
                    fi
                    echo "'cico node get' succeed, but can't get hostname from output"
                fi
                if [ $n -gt 5 ]; then
                    # give up after 5 tries
                    echo "giving up on 'cico node get'"
                    exit 1
                fi
                echo "'cico node get' failed, trying again in 60s ($n/5)"
                n=$[$n+1]
                sleep 60
            done
            echo 'Using Host' $CICO_hostname
            set -x
            sshopts="-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root"
            ssh_cmd="ssh $sshopts $CICO_hostname"
            $ssh_cmd yum -y install rsync
            rsync -e "ssh $sshopts" -Ha $(pwd)/ $CICO_hostname:payload
            $ssh_cmd -t "cd payload && /bin/bash cico_run_EE_tests.sh https://openshift.io"
            rtn_code=$?
            cico node done $CICO_ssid
            exit $rtn_code
    publishers:
      - archive:
           artifacts: './target/screenshots/*.*'
           allow-empty: true
           fingerprint: true

- wrapper:
    name: generator_credentials_wrapper
    wrappers:
        - credentials-binding:
            - text:
                credential-id: 061479ee-de4a-4fb0-b752-7b86659ba3ca
                variable: GENERATOR_DOCKER_HUB_PASSWORD

- job-template:
    name: '{ci_project}-{git_repo}-generator-build-master'
    scm:
        - git:
            url: https://github.com/{git_organization}/{git_repo}.git
            shallow_clone: true
            branches:
                - master
    wrappers:
        - generator_credentials_wrapper
    <<: *job_template_build_defaults

- job:
    name: 'devtools-promote-to-prod'
    defaults: global
    node: devtools
    properties:
        - github:
            url: https://github.com/openshiftio/saas/
    scm:
        - git:
            url: https://github.com/openshiftio/saas.git
            shallow_clone: true
            branches:
                - master
    triggers:
        - github
    builders:
        - shell: |
            set +x
            /bin/bash ./fetch_and_apply.sh
            exit $rtn_code

!include: saas.yaml.inc

- project:
    name: devtools
    jobs:
        - '{ci_project}-{git_repo}':
            git_repo: fabric8-wit
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '20m'
        - '{ci_project}-{git_repo}-coverage':
            git_repo: fabric8-wit
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_coverage.sh'
            timeout: '45m'
        - '{ci_project}-{git_repo}':
            git_repo: fabric8-devdoc
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '20m'
        - '{ci_project}-{git_repo}':
            git_organization: fabric8-ui
            git_repo: fabric8-ui
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '30m'
        - '{ci_project}-{git_repo}':
            git_organization: openshiftio
            git_repo: openshift.io
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '30m'
        - '{ci_project}-{git_repo}':
            git_organization: fabric8io
            git_repo: fabric8-forker
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '10m'
        - '{ci_project}-{git_repo}':
            git_organization: fabric8-services
            git_repo: fabric8-tenant
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '10m'
        - '{ci_project}-fabric8-devdoc-build-master':
            git_repo: fabric8-devdoc
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            timeout: '30m'
        - '{ci_project}-{git_repo}-build-master':
            git_repo: fabric8-wit
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            template_name: ./openshift/core.app.yaml
            timeout: '20m'
        - '{ci_project}-{git_repo}-build-master-coverage':
            git_repo: fabric8-wit
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_coverage.sh'
            svc_name: core
            timeout: '25m'
        - '{ci_project}-{git_repo}-build-master':
            git_organization: aslakknutsen
            git_repo: almighty-performance
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            svc_name: aslak-almighty-perf
            timeout: '20m'
        - '{ci_project}-{git_repo}':
            git_organization: aslakknutsen
            git_repo: almighty-performance
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '10m'
        - '{ci_project}-{git_repo}-npm-publish-build-master':
            git_organization: fabric8-ui
            git_repo: fabric8-ui
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            svc_name: f8ui
            timeout: '20m'
        - '{ci_project}-{git_repo}-build-master':
            git_organization: openshiftio
            git_repo: openshift.io
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            svc_name: wwwopenshiftio
            timeout: '20m'
        - '{ci_project}-{git_repo}-build-master':
            git_organization: fabric8io
            git_repo: fabric8-forker
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            svc_name: f8forker
            timeout: '10m'
        - '{ci_project}-{git_repo}-build-master':
            git_organization: fabric8-services
            git_repo: fabric8-tenant
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            template_name: OpenShiftTemplate.yml
            timeout: '10m'
        - '{ci_project}-{git_repo}-build-che-credentials-master':
            git_organization: redhat-developer
            git_repo: che-starter
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            template_name: /openshift-template/che-starter.app.yaml
            timeout: '20m'
        - '{ci_project}-{git_repo}-build-master':
            git_organization: redhat-developer
            git_repo: che-vertx-server
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            timeout: '20m'
        - '{ci_project}-{git_repo}':
            git_organization: redhat-developer
            git_repo: che-starter
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '20m'
        - '{ci_project}-{git_repo}':
            git_organization: fabric8-ui
            git_repo: ngx-widgets
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '20m'
        - '{ci_project}-{git_repo}-npm-publish-build-master':
            git_organization: fabric8-ui
            git_repo: ngx-widgets
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
        - '{ci_project}-{git_repo}':
            git_organization: fabric8-ui
            git_repo: ngx-login-client
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '20m'
        - '{ci_project}-{git_repo}-npm-publish-build-master':
            git_organization: fabric8-ui
            git_repo: ngx-login-client
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
        - '{ci_project}-{git_repo}':
            git_organization: fabric8-ui
            git_repo: ngx-fabric8-wit
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '20m'
        - '{ci_project}-{git_repo}-npm-publish-build-master':
            git_organization: fabric8-ui
            git_repo: ngx-fabric8-wit
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            svc_name: fabric8-ui-ngx-fabric8-wit
        - '{ci_project}-{git_repo}-build-master':
            git_organization: fabric8io
            git_repo: keycloak-deployment
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            timeout: '50m'
            template_name: ./openshift/keycloak.app.yaml
            prj_name: dsaas-keycloak-preview
        - '{ci_project}-{git_repo}':
            git_organization: fabric8io
            git_repo: keycloak-deployment
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '60m'
        - '{ci_project}-{git_repo}':
            git_organization: ldimaggi
            git_repo: perfcake
            ci_project: 'devtools'
            ci_cmd: '/bin/bash POC_perf_test.sh'
            timeout: '20m'
        - '{ci_project}-{git_repo}-build-master':
            git_organization: redhat-developer
            git_repo: osd-monitor-poc
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build.sh'
            template_name: osd-monitor.yml
        - '{ci_project}-{git_repo}':
            git_organization: fabric8-ui
            git_repo: ngx-base
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '20m'
        - '{ci_project}-{git_repo}-npm-publish-build-master':
            git_organization: fabric8-ui
            git_repo: ngx-base
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            svc_name: fabric8-ui-ngx-base
        - '{ci_project}-{git_repo}-build-che-credentials-master':
            git_organization: redhat-developer
            git_repo: che-dockerfiles
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_publish_images.sh'
            timeout: '10m'
            svc_name: none
        - '{ci_project}-{git_repo}-generator-build-master':
            git_organization: openshiftio
            git_repo: launchpad-frontend
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            svc_name: launchpad-frontend
        - '{ci_project}-{git_repo}-generator-build-master':
            git_organization: openshiftio
            git_repo: launchpad-backend
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            svc_name: launchpad-backend
        - '{ci_project}-{git_repo}-generator-build-master':
            git_organization: openshiftio
            git_repo: launchpad-missioncontrol
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            svc_name: catapult
        - '{ci_project}-{git_repo}-build-master':
            git_organization: openshiftio
            git_repo: status-api
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_build_deploy.sh'
            template_name: openshift/status-api.app.yaml
        - '{ci_project}-{git_repo}':
            git_organization: fabric8-ui
            git_repo: fabric8-recommender
            ci_project: 'devtools'
            ci_cmd: '/bin/bash cico_run_tests.sh'
            timeout: '30m'
